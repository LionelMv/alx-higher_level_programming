# Run test with: python3 -m doctest -v ./tests/0-add_integer.txt

Import the module to test:
    add_integer = __import__('0-add_integer').add_integer
    >>> from 0-add_integer import add_integer
    
Test for signed and unsigned ints and floats:
    >>> add_integer(2, 3)
    5
    >>> add_integer(-2, 3)
    1
    >>> add_integer(5)
    103
    >>> add_integer(1.5)
    99
    >>> add_integer(3, -5.5)
    -2

Test for other data types:
    >>> add_integer(3, "boy")
    Traceback (most recent call last):
     ...
    TypeError: b must be an integer
    >>> add_integer("cat")
    Traceback (most recent call last):
     ...
    TypeError: a must be an integer
    >>> print(add_integer(None))
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer
    >>> print(add_integer(0, [1, 2, 3]))
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

Test extra args:
     >>> print(add_integer(1, 2, 3))
     Traceback (most recent call last):
     ...
     TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

Test max/min numbers Python can handle ("inf" is infinity):
     >>> print(add_integer(float("inf")))
     Traceback (most recent call last):
     ...
     OverflowError: cannot convert float infinity to integer
     >>> print(add_integer(float("-inf")))
     Traceback (most recent call last):
     ...
     OverflowError: cannot convert float infinity to integer

Test special float NaN in Python (not a number):
     >>> print(add_integer(float("NaN")))
     Traceback (most recent call last):
     ...
     ValueError: cannot convert float NaN to integer
